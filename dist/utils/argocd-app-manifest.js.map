{"version":3,"file":"argocd-app-manifest.js","sources":["../../src/utils/argocd-app-manifest.ts"],"sourcesContent":["import * as exec from '@actions/exec'\nimport { fetchTcTool } from './tools'\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport * as os from 'os'\nimport * as yaml from 'js-yaml'\nimport _ from 'lodash'\n\nexport async function generateValuesYaml(\n  applicationName: string,\n  environment: string,\n  sourceRepo: string,\n  sourceOrg: string,\n  sourceBranch: string,\n  customValues: string\n): Promise<string> {\n  // define defaultValues YAML object as a JSON object\n  const defaultValues: Record<string, any> = {\n    applicationName: `${applicationName}-${environment}`,\n    application: {\n      destination: {\n        namespace: applicationName\n      },\n      source: {\n        repoURL: `https://github.com/${sourceOrg}/${sourceRepo}.git`,\n        targetRevision: sourceBranch,\n        path: `${applicationName}/${environment}/`\n      }\n    }\n  }\n\n  // if customValues is not provided, return defaultValues\n  if (!customValues) {\n    return yaml.dump(defaultValues)\n  }\n\n  // parse customValues as YAML object\n  try {\n    const customValuesYaml = yaml.load(customValues)\n\n    // merge defaultValues and customValues using lodash merge\n    const mergedValues = _.merge(defaultValues, customValuesYaml)\n    return yaml.dump(mergedValues)\n  } catch (error) {\n    throw new Error(`Invalid custom values YAML: ${error}`)\n  }\n}\n\nexport async function generateArgoCDAppManifest(\n  applicationName: string,\n  environment: string,\n  customValuesYaml: string,\n  argoCDAppHelmChart: string\n): Promise<string> {\n  // download helm tool using tc cache\n  await fetchTcTool('helm')\n\n  // store custom values yaml in a temporary file\n  const customValuesFilePath = path.join(os.tmpdir(), 'custom-values.yaml')\n  await fs.promises.writeFile(customValuesFilePath, customValuesYaml)\n\n  // resolve and validate path to the helm chart\n  const baseDir = path.dirname(new URL(import.meta.url).pathname)\n  const resolvedChartPath = path.isAbsolute(argoCDAppHelmChart)\n    ? argoCDAppHelmChart\n    : path.resolve(baseDir, argoCDAppHelmChart)\n\n  const chartYamlPath = path.join(resolvedChartPath, 'Chart.yaml')\n  try {\n    await fs.promises.readFile(chartYamlPath)\n  } catch {\n    throw new Error(`we cant find helm chart in path given: ${chartYamlPath}`)\n  }\n\n  // capture stdout from helm template command\n  let stdout = ''\n  let stderr = ''\n  const options = {\n    listeners: {\n      stdout: (data: Buffer) => {\n        stdout += data.toString()\n      },\n      stderr: (data: Buffer) => {\n        stderr += data.toString()\n      }\n    }\n  }\n\n  // render the manifest using helm template\n  const exitCode = await exec.exec(\n    'helm',\n    [\n      'template',\n      applicationName,\n      resolvedChartPath,\n      '-f',\n      customValuesFilePath\n    ],\n    options\n  )\n\n  if (exitCode !== 0) {\n    throw new Error(\n      `helm template failed with exit code ${exitCode}: ${stderr}`\n    )\n  }\n\n  return stdout.trim()\n}\n"],"names":[],"mappings":"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"}